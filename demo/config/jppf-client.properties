#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# manual driver connection configuration                                       #
#------------------------------------------------------------------------------#

jppf.client.sysout.enabled = false

# List of drivers this client may connect to
#jppf.drivers = jppf_discovery driver1
jppf.drivers = driver1
#jppf.drivers = driver1 driver2

driver1.jppf.server.host = 192.168.1.24
#driver1.jppf.server.host = 192.168.1.16
driver1.jppf.server.port = 11111
#driver1.jppf.server.port = 11443
#driver1.jppf.priority = 20
driver1.jppf.pool.size = 1
#driver1.jppf.max.jobs = 1
#driver1.jmx.jppf.pool.size = 1
#driver1.jppf.recovery.enabled = true

driver2.jppf.server.host = 192.168.1.24
driver2.jppf.server.port = 11112
#driver2.jppf.server.port = 11443
driver2.jppf.priority = 10
#driver2.jppf.ssl.enabled = true
driver2.jppf.pool.size = 1
#driver2.jmx.jppf.pool.size = 1

#------------------------------------------------------------------------------#

jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
jppf.discovery.priority = 11
jppf.discovery.acceptMultipleInterfaces = false
#jppf.discovery.include.ipv4 = 192.168.1.
#jppf.discovery.exclude.ipv4 = 192.168.1.0/24
#jppf.discovery.include.ipv6 = 1080:0:0:0:8:800:200C-20FF:-
jppf.discovery.exclude.ipv6 = -
jppf.pool.size = 1
jppf.jmx.pool.size = 1
#jppf.discovery.priority = 20

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# enable SSL. Default is false (disabled).
# if enabled, only SSL connections are established
#jppf.ssl.enabled = true

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = config/ssl2/ssl-client.properties

# SSL configuration as an arbitrary source. Value is the fully qualified name
# of an implementation of Callable<InputStream> with optional arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl/ssl-server.properties

#------------------------------------------------------------------------------#
# Automatic recovery: number of seconds before the first reconnection attempt. #
#------------------------------------------------------------------------------#

jppf.reconnect.initial.delay = 0
jppf.reconnect.max.time = 300
#jppf.reconnect.interval = 1

#------------------------------------------------------------------------------#

#jppf.remote.execution.enabled = false
#jppf.local.execution.enabled = true
jppf.local.execution.threads = 8
#jppf.local.execution.priority = 10

#------------------------------------------------------------------------------#

#jppf.data.transform.class = org.jppf.example.dataencryption.SecureKeyCipherTransform

#------------------------------------------------------------------------------#

#!include file jppf-common.properties

#------------------------------------------------------------------------------#
# Automatic recovery: number of seconds before the first reconnection attempt. #
#------------------------------------------------------------------------------#

lb.pkg = org.jppf.load.balancer.persistence
lb.db = ${lb.pkg}.DatabaseLoadBalancerPersistence load_balancer jobDS
lb.file = ${lb.pkg}.FileLoadBalancerPersistence lb_persistence_client1
lb.async = ${lb.pkg}.AsynchronousLoadBalancerPersistence 16

#jppf.load.balancing.persistence = ${lb.async} ${lb.db}
#jppf.load.balancing.persistence = ${lb.db}
#jppf.load.balancing.persistence = ${lb.async} ${lb.file}
#jppf.load.balancing.persistence = ${lb.file}

#------------------------------------------------------------------------------#
# the name of the load-balancing algorithm to use                              #
# pre-defined possible values are:                                             #
# manual | autotuned | proportional | rl | nodethreads                         #
# it can also be the name of a user-defined algorithm (since 2.0)              #
# default value is "proportional"                                              #
#------------------------------------------------------------------------------#

#jppf.load.balancing.algorithm = proportional
jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = rl2
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = customLoadBalancer

#------------------------------------------------------------------------------#
# name of the set of parameter values (aka profile) to use for the algorithm   #
#------------------------------------------------------------------------------#
#jppf.load.balancing.profile = proportional
jppf.load.balancing.profile = test

# "manual" profile
jppf.load.balancing.profile.manual.size = 1000000

# "autotuned" profile
jppf.load.balancing.profile.autotuned.size = 5
jppf.load.balancing.profile.autotuned.minSamplesToAnalyse = 100
jppf.load.balancing.profile.autotuned.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.autotuned.maxDeviation = 0.2
jppf.load.balancing.profile.autotuned.maxGuessToStable = 50
jppf.load.balancing.profile.autotuned.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.autotuned.decreaseRatio = 0.2

# "proportional" profile
jppf.load.balancing.profile.proportional.performanceCacheSize = 1000
jppf.load.balancing.profile.proportional.proportionalityFactor = 1
jppf.load.balancing.profile.proportional.initialSize = 50
jppf.load.balancing.profile.proportional.initialMeanTime = 3e10

# "rl" profile
jppf.load.balancing.profile.rl.performanceCacheSize = 1000
jppf.load.balancing.profile.rl.performanceVariationThreshold = 0.001
jppf.load.balancing.profile.rl.maxActionRange = 10

# "test" profile
# manual params
jppf.load.balancing.profile.test.size = 1000000
# autotuned params
jppf.load.balancing.profile.test.minSamplesToAnalyse = 100
jppf.load.balancing.profile.test.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.test.maxDeviation = 0.2
jppf.load.balancing.profile.test.maxGuessToStable = 50
jppf.load.balancing.profile.test.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.test.decreaseRatio = 0.2
# proportional params
jppf.load.balancing.profile.test.proportionalityFactor = 1
jppf.load.balancing.profile.test.initialSize = 10
jppf.load.balancing.profile.test.initialMeanTime = 3e10
# nodethreads params
jppf.load.balancing.profile.test.multiplicator = 1
# rl2 params
jppf.load.balancing.profile.test.performanceCacheSize = 1000
jppf.load.balancing.profile.test.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.test.minSamples = 20
jppf.load.balancing.profile.test.maxSamples = 500
jppf.load.balancing.profile.test.maxRelativeSize = 0.5

#------------------------------------------------------------------------------#
# Matrix example                                                               #
#------------------------------------------------------------------------------#

# matrix size
matrix.size = 300
task.nbRows = 1
# number of times the matrix multiplication is performed.
matrix.iterations = 1000
matrix.nbChannels = 1

# when using offline nodes, classpath to send in the job SLA. Paths are separated with pipe characters '|' 
#matrix.classpath = C:/Workspaces/temp/demo.jar

#------------------------------------------------------------------------------#
# Long Task example                                                            #
#------------------------------------------------------------------------------#

# task execution length, in milliseconds
longtask.length = 100
# number of tasks to execute at each iteration
longtask.number = 160
# number of iterations.
longtask.iterations = 1

#------------------------------------------------------------------------------#
# Many jobs example                                                            #
#------------------------------------------------------------------------------#

# connection pool size
manyjobs.pool.size = 2
# task duration in ms
manyjobs.task.duration = 2
# number of tasks per job
manyjobs.nbtasks = 1000
# number of jobs
manyjobs.nbjobs = 100

#------------------------------------------------------------------------------#
# Task Notification example                                                    #
#------------------------------------------------------------------------------#

# number of tasks to execute at each iteration
notification.nbTasks = 10
# number of stages to simulate for each task
notification.nbStages = 10
# stage execution length, in milliseconds
notification.duration = 1200
# number of iterations.
notification.iterations = 1

#------------------------------------------------------------------------------#
# Profiling tests                                                              #
#------------------------------------------------------------------------------#

# number of time to execute at each iteration
profiling.nbTasks = 1
# number of iterations.
profiling.iterations = 1
# size of the data in each task in bytes
profiling.data.size = 0
profiling.channels = 1

#------------------------------------------------------------------------------#
# Prime numbers computation example                                            #
#------------------------------------------------------------------------------#

prime.limit = 1
prime.batch.size = 100
#prime.start = 33222592
#prime.start =  1000000
prime.start = 50000

#------------------------------------------------------------------------------#
# N-body computation example                                                   #
#------------------------------------------------------------------------------#

# charge on an antiproton
nbody.qp = 6
# magnetic field strength
nbody.b = 0.2
#nbody.b = 0.42
# simulation radius
nbody.radius = 500
nbody.dt = 0.01
# number of bodies (antiprotons)
#nbody.n = 400
nbody.n = 200
# number of time steps
nbody.time.steps = 20000
#nbody.bodies.per.task = 35
nbody.bodies.per.task = 25

#------------------------------------------------------------------------------#
# Data size example                                                            #
#------------------------------------------------------------------------------#

datasize.inNodeOnly = false
datasize.size = 120
datasize.unit = m
datasize.nbTasks = 2
datasize.iterations = 10

#------------------------------------------------------------------------------#
# Job management example                                                       #
#------------------------------------------------------------------------------#

job.management.nbTasks = 10
job.management.duration = 5000

#------------------------------------------------------------------------------#
# Parameters specific to the data dependency application                       #
#------------------------------------------------------------------------------#

#!include file samples/data_dependency.properties

#------------------------------------------------------------------------------#
# Parameters specific to the large data demo                                   #
#------------------------------------------------------------------------------#

#largedata.file = C:/ftp/util/Dictionaries/split/small.xml
#largedata.file = C:/ftp/util/Dictionaries/split/medium-0.xml
#largedata.file = C:/ftp/util/Dictionaries/split/large-0.xml
largedata.file = C:/ftp/util/Dictionaries/enwiki-latest-pages-articles.xml
largedata.articles.per.task = 100
largedata.tasks.per.job = 200
largedata.channels = 4
largedata.job.cache.size = 3

#------------------------------------------------------------------------------#
# Deadlock test                                                                #
#------------------------------------------------------------------------------#

#!include file samples/deadlock.properties

#------------------------------------------------------------------------------#
# Memory leak test                                                             #
#------------------------------------------------------------------------------#

# The number of jobs to submit.
leak.nbJobs = 10000
# The number fo tasks in each job.
leak.nbTasks = 2
# How long each task will sleep.
leak.duration = 2000L
# The minimum memory footprint of each task.
#leak.dataSize = 1024
leak.dataSize = $script{ 5 * 1024 * 1024 }$

#------------------------------------------------------------------------------#
# Word count test                                                              #
#------------------------------------------------------------------------------#

# path to the wikipedia file
#wordcount.file = data/wikipedia_en_small.xml
wordcount.file = C:/ftp/util/Wikipedia/split/wikipedia_en_large.xml
#wordcount.file = C:/ftp/util/Wikipedia/enwiki-latest-pages-articles.xml
# how many articles per JPPF task
wordcount.articles.per.task = 10
# how many task in each JPPF job
wordcount.tasks.per.job = 100
# how many server connections can each job be distributed over (parallel I/O)
# should be <= jppf.pool.size or driver1.jppf.pool.size
wordcount.channels = 1
# how many concurrent job can be executing at the same time
wordcount.job.capacity = 4
